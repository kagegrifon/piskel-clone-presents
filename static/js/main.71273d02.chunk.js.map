{"version":3,"sources":["utils/utils.js","utils/frameUtils.js","component/Header/index.js","component/Header/Header.js","component/PiskelBlock/PiskelBlock.js","component/PiskelBlock/index.js","component/PixelSize/PixelSize.js","component/PixelSize/index.js","component/ToolsList/ToolsList.js","component/ToolsList/index.js","component/ColorControls/ColorControls.js","component/ColorControls/index.js","component/ToolsBlock/index.js","component/ToolsBlock/ToolsBlock.js","component/PiskelFrame/PiskelFrame.js","component/PiskelFrame/index.js","component/PreviewFramesBlock/index.js","component/PreviewFramesBlock/PreviewFramesBlock.js","component/PreviewAnimationBlock/PreviewAnimationBlock.js","component/PreviewAnimationBlock/index.js","component/App/App.js","component/App/index.js","index.js"],"names":["utils","kebabCaseToCamelCase","string","replace","match","p1","p2","toUpperCase","getRandomID","Math","floor","random","Date","now","frameUtils","makeNewMatrix","pixelCount","color","arguments","length","undefined","line","Array","fill","map","slice","getOffsetValues","canvas","result","document","defaultView","getComputedStyle","stylePaddingLeft","parseInt","paddingLeft","stylePaddingTop","paddingTop","styleBorderLeft","borderLeftWidth","styleBorderTop","borderTopWidth","html","body","parentNode","htmlTop","offsetTop","htmlLeft","offsetLeft","getMouse","e","offsetValues","offsetX","offsetY","node","offsetParent","x","pageX","y","pageY","paintColors","colorsMatrix","pixelSide","round","width","ctx","getContext","forEach","pixelRow","pixelColor","fillStyle","fillRect","paintDefaultScreen","defaultScreenPixelCount","i","j","Header","react_default","a","createElement","className","PiskelBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","React","createRef","colorTypesByMouseButton","rightMouseButton","code","colorType","leftMouseButton","handleClick","bind","assertThisInitialized","current","activeFrame","size","getBoundingClientRect","setAttribute","height","FrameUtils","frameColors","buttonType","keys","find","button","buttons","offSetValues","clickPosition","pixelSize","startPos","toolArial","activeModeOpt","matrixChanges","push","pos","activeColors","clickedPixelPos","getPixelPos","activeColorType","getActiveColorTypeByMouseButton","getMatrixChangesForArial","event","specialActionType","specialActionOpt","_this$props","handleSetActiveColors","handles","defineProperty","_this2","tool","handleFrameMatrixChange","some","mouseMooveHandle","actionType","concat","colorPickerAction","moveEvent","changesOnMoveMatrix","removingHandleFunc","removeEvent","target","removeEventListener","addEventListener","ref","onMouseDown","onContextMenu","preventDefault","Component","PixelSize","handleSetActiveToolArial","dataset","activeSize","variants","isActive","onClick","data-size","key","role","tabIndex","aria-selected","ToolsList","handleClickOnTool","handleSetActiveTool","toolType","tools","activeTool","toolsItems","toolName","toolNameCamelCase","Utils","data-tool-type","ColorControls","colorInputs","handleChangeValue","colorInputName","value","colorControls","name","isTransparentColor","click","style","backgroundColor","onChange","type","input","ToolsBlock","_props$handles","toolsHandles","toolArialHandles","colorControlHandles","_props$activeModeOpt","component_PixelSize","component_ToolsList","component_ColorControls","PiskelFrame","handleClickOnFrame","frame","_this$props$handles","handleRemoveFrame","handleDuplicateFrame","handleSetActiveFrame","handleByTarget","delete","dublicate","move","noControls","targetType","controlType","_this$props2","isOnlyOneItem","orderNumber","frameControls","data-order-number","PreviewFramesBlock","frameListHandles","frameHandles","frames","activeFrameID","frameItems","frameID","component_PiskelFrame","handleAddNewFrame","PreviewAnimationBlock","state","fps","requestAnimationFrameID","handleChange","cancelAnimationFrame","animateFrames","fpsInterval","frameCount","interval","self","step","timestamp","requestAnimationFrame","startAnimating","setState","min","max","App","primary","secondary","handle","_this$state","activeFrameIndex","findIndex","newFramesMatrixs","isArray","pixel","opt","filledMatrix","newFrame","newFrames","copingFrame","copingFrameIndex","colorsCopy","rowColors","copyFrame","splice","removingFrame","_this$state2","removingFrameIndex","stateChanges","nextActiveFrameIndex","newActiveFrame","assign","newColor","previewFramesBlockHandles","toolsBlockHandles","piskelBlockHandles","_this$state3","component_Header","component_ToolsBlock","component_PreviewFramesBlock","component_PiskelBlock","component_PreviewAnimationBlock","ReactDOM","render","component_App","getElementById"],"mappings":"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","file":"static/js/main.71273d02.chunk.js","sourcesContent":["export default {\n  /**\n   * Функция для перевода строки из kebab-case в camelCase\n   * @param {String} string - строка, которую нужно перевести в другой формат\n   * @return {String} - результат перевода\n   */\n  kebabCaseToCamelCase: string => string.replace(/(-)(.)/g, (match, p1, p2) => p2.toUpperCase()),\n  /**\n   * Функция для получения случайного значения на основе фукнции Math.random и текущего времени\n   * @return {Number} - число со случайным значением\n   */\n  getRandomID() {\n    return Math.floor(Math.random() * 10000000000000001) + Date.now();\n  },\n};\n","export default {\n  /**\n   * Функция для создания матрицы цветов фрейма\n   * @param {Number} pixelCount - количество пикселей по ширине или высоте\n   * @param {String} color - цвет, который будет в каждом пикселе\n   * @return {Array} - двумерная матрица размером pixelCount * pixelCount, заполненная цветом color\n   */\n  makeNewMatrix: (pixelCount, color = 'transparent') => {\n    const line = new Array(pixelCount).fill(color);\n    const newMatrix = new Array(pixelCount)\n      .fill(null)\n      .map(() => line.slice());\n\n    return newMatrix;\n  },\n  /**\n   * Функция для определения отступов для расчета позиции курсора\n   * @param {Canvas} canvas - канвас\n   * @return {Object} объект, в полях которого значения отступов\n   */\n  getOffsetValues: (canvas) => {\n    const result = {};\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      result.stylePaddingLeft = parseInt(document.defaultView.getComputedStyle(canvas, null).paddingLeft, 10)      || 0; // eslint-disable-line no-multi-spaces, max-len\n      result.stylePaddingTop  = parseInt(document.defaultView.getComputedStyle(canvas, null).paddingTop, 10)       || 0; // eslint-disable-line no-multi-spaces, max-len\n      result.styleBorderLeft  = parseInt(document.defaultView.getComputedStyle(canvas, null).borderLeftWidth, 10)  || 0; // eslint-disable-line no-multi-spaces, max-len\n      result.styleBorderTop   = parseInt(document.defaultView.getComputedStyle(canvas, null).borderTopWidth, 10)   || 0; // eslint-disable-line no-multi-spaces, max-len\n    }\n\n    // Some pages have fixed-position bars (like the stumbleupon bar) at the top or left of the page\n    // They will mess up mouse coordinates and this fixes that\n    const html = document.body.parentNode;\n\n    result.htmlTop = html.offsetTop;\n    result.htmlLeft = html.offsetLeft;\n\n    return result;\n  },\n  /**\n   * Функция для определения позиции мыши на холсте\n   * @param {MouseEvent} e - собитие мыши\n   * @param {Object} offsetValues - поправка на отступы страницы. Результат функции getOffsetValues\n   * @param {Canvas} canvas - канвас\n   * @return {Object: {x: mx, y: my} } - объект, в полях которого x - позиция по горизонтали, y - по вертикали\n   */\n  getMouse: (e, offsetValues, canvas) => {\n    let offsetX = 0;\n    let offsetY = 0;\n    let node = canvas;\n\n    // Compute the total offset\n    if (node.offsetParent !== undefined) {\n      // eslint-disable-next-line no-cond-assign\n      do {\n        offsetX += node.offsetLeft;\n        offsetY += node.offsetTop;\n      } while ((node = node.offsetParent) !== null);\n    }\n\n    // Add padding and border style widths to offset\n    // Also add the <html> offsets in case there's a position:fixed bar\n    offsetX += offsetValues.stylePaddingLeft + offsetValues.styleBorderLeft + offsetValues.htmlLeft;\n    offsetY += offsetValues.stylePaddingTop + offsetValues.styleBorderTop + offsetValues.htmlTop;\n\n    const mx = e.pageX - offsetX;\n    const my = e.pageY - offsetY;\n\n    return { x: mx, y: my };\n  },\n  /**\n   * Функция для рисования матрицы пикселей на канвасе\n   * @param {Canvas} canvas - канвас\n   * @param {Array} colorsMatrix - матрица цветов, которую нужно нарисовать на канвасе\n   */\n  paintColors: (canvas, colorsMatrix) => {\n    const pixelCount = colorsMatrix.length;\n    const pixelSide = Math.round(canvas.width / pixelCount);\n    const ctx = canvas.getContext('2d');\n\n    colorsMatrix.forEach((pixelRow, y) => pixelRow\n      .forEach((pixelColor, x) => {\n        ctx.fillStyle = pixelColor;\n        ctx.fillRect(x * pixelSide, y * pixelSide, pixelSide, pixelSide);\n      }));\n  },\n  /**\n   * Функция для рисования экрана с эффектом прозрачности\n   * @param {Canvas} canvas - канвас\n   * @param {Number} pixelCount - количество пикселей по ширине или высоте\n   */\n  paintDefaultScreen: (canvas, pixelCount) => {\n    const defaultScreenPixelCount = pixelCount * 2;\n    const pixelSide = Math.round(canvas.width / defaultScreenPixelCount);\n    const ctx = canvas.getContext('2d');\n\n    for (let i = 0; i < defaultScreenPixelCount; i += 1) {\n      for (let j = 0; j < defaultScreenPixelCount; j += 1) {\n        ctx.fillStyle = (i + j) % 2 === 0 ? '#666666' : '#888888';\n        ctx.fillRect(j * pixelSide, i * pixelSide, pixelSide, pixelSide);\n      }\n    }\n  },\n};\n","import Header from './Header';\r\nimport './Header.scss';\r\n\r\nexport default Header;\r\n","import React from 'react';\n\nexport default function Header() {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__logo\">Piskel Clone</h1>\n      <p className=\"header__piskel-title\">new Piskel</p>\n    </header>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FrameUtils from '../../utils/frameUtils';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    handleSetActiveColors: PropTypes.func,\n    handleFrameMatrixChange: PropTypes.func,\n  }).isRequired,\n  activeFrame: PropTypes.shape({\n    frameColors: PropTypes.array,\n    frameID: PropTypes.number,\n  }).isRequired,\n  activeModeOpt: PropTypes.shape({\n    tool: PropTypes.string,\n    toolArial: PropTypes.number,\n  }).isRequired,\n  activeColors: PropTypes.shape({\n    primary: PropTypes.string,\n    secondary: PropTypes.string,\n  }).isRequired,\n};\n\nexport default class PiskelBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = React.createRef();\n\n    this.colorTypesByMouseButton = {\n      rightMouseButton: {\n        code: 2,\n        colorType: 'secondary',\n      },\n      leftMouseButton: {\n        code: 1,\n        colorType: 'primary',\n      },\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    const { activeFrame } = this.props;\n\n    const size = canvas.getBoundingClientRect();\n    canvas.setAttribute('width', size.width);\n    canvas.setAttribute('height', size.height);\n\n    FrameUtils.paintDefaultScreen(canvas, activeFrame.frameColors.length);\n  }\n\n  componentDidUpdate() {\n    const { activeFrame } = this.props;\n    const { canvas: { current: canvas } } = this;\n\n    FrameUtils.paintDefaultScreen(canvas, activeFrame.frameColors.length);\n    FrameUtils.paintColors(canvas, activeFrame.frameColors);\n  }\n\n  getActiveColorTypeByMouseButton(e) {\n    const { colorTypesByMouseButton } = this;\n    const buttonType = Object.keys(colorTypesByMouseButton)\n      .find(button => colorTypesByMouseButton[button].code === e.buttons);\n\n    return colorTypesByMouseButton[buttonType].colorType;\n  }\n\n  getPixelPos(e) {\n    const { canvas: { current: canvas } } = this;\n    const { activeFrame } = this.props;\n\n    const offSetValues = FrameUtils.getOffsetValues(canvas);\n    const clickPosition = FrameUtils.getMouse(e, offSetValues, canvas);\n\n    const pixelCount = activeFrame.frameColors.length;\n    const pixelSize = Math.round(canvas.width / pixelCount);\n\n    const pixelPos = {\n      x: Math.floor(clickPosition.x / pixelSize),\n      y: Math.floor(clickPosition.y / pixelSize),\n    };\n\n    return pixelPos;\n  }\n\n  getMatrixChangesForArial(startPos, color) {\n    const { activeModeOpt: { toolArial } } = this.props;\n    const { activeFrame: { frameColors } } = this.props;\n\n    const matrixChanges = [];\n    const pixelCount = frameColors.length;\n\n    for (let i = 0; i < toolArial; i += 1) {\n      for (let j = 0; j < toolArial; j += 1) {\n        if ( // если позиция в допустимой зоне\n          startPos.x + j >= 0\n          && startPos.y + i >= 0\n          && startPos.x + j < pixelCount\n          && startPos.y + i < pixelCount\n\n        ) {\n          matrixChanges.push({\n            pos: {\n              x: startPos.x + j,\n              y: startPos.y + i,\n            },\n            color,\n          });\n        }\n      }\n    }\n\n    return matrixChanges;\n  }\n\n  penAction(e) {\n    const { activeColors } = this.props;\n\n    const clickedPixelPos = this.getPixelPos(e);\n    const activeColorType = this.getActiveColorTypeByMouseButton(e);\n\n    const matrixChanges = this.getMatrixChangesForArial(\n      clickedPixelPos,\n      activeColors[activeColorType],\n    );\n\n    return matrixChanges;\n  }\n\n  eraserAction(event) {\n    const clickedPixelPos = this.getPixelPos(event);\n\n    const matrixChanges = this.getMatrixChangesForArial(\n      clickedPixelPos,\n      'transparent',\n    );\n\n    return matrixChanges;\n  }\n\n  bucketAction(event) {\n    const { activeColors } = this.props;\n    const activeColorType = this.getActiveColorTypeByMouseButton(event);\n\n    const matrixChanges = {\n      specialActionType: 'fill',\n      specialActionOpt: {\n        color: activeColors[activeColorType],\n      },\n    };\n\n    return matrixChanges;\n  }\n\n  colorPickerAction(e) {\n    const {\n      activeFrame,\n      handles: { handleSetActiveColors },\n    } = this.props;\n\n    const activeColorType = this.getActiveColorTypeByMouseButton(e);\n    const clickedPixelPos = this.getPixelPos(e);\n    const newColors = {\n      [activeColorType]: activeFrame.frameColors[clickedPixelPos.y][clickedPixelPos.x],\n    };\n\n    handleSetActiveColors(newColors);\n  }\n\n  handleClick(event) {\n    const { activeModeOpt: { tool } } = this.props;\n    const { handles: { handleFrameMatrixChange } } = this.props;\n\n    const isLeftOrRightMouseButton = Object.keys(this.colorTypesByMouseButton)\n      .some(button => this.colorTypesByMouseButton[button].code === event.buttons);\n\n    if (!isLeftOrRightMouseButton) return;\n\n    let mouseMooveHandle = () => {};\n    const actionType = `${tool}Action`;\n\n    if (tool === 'colorPicker') {\n      this.colorPickerAction(event);\n      mouseMooveHandle = moveEvent => this.colorPickerAction(moveEvent);\n    } else {\n      const matrixChanges = this[actionType](event);\n      handleFrameMatrixChange(matrixChanges);\n\n      if (tool !== 'bucket') {\n        mouseMooveHandle = (moveEvent) => {\n          const changesOnMoveMatrix = this[actionType](moveEvent);\n          const isNewChanges = changesOnMoveMatrix.length > 0;\n          if (isNewChanges) handleFrameMatrixChange(changesOnMoveMatrix);\n        };\n      }\n    }\n\n    const removingHandleFunc = (removeEvent) => {\n      removeEvent.target.removeEventListener('mousemove', mouseMooveHandle);\n      removeEvent.target.removeEventListener('mouseup', removingHandleFunc);\n      removeEvent.target.removeEventListener('mouseout', removingHandleFunc);\n    };\n\n    event.target.addEventListener('mousemove', mouseMooveHandle);\n    event.target.addEventListener('mouseup', removingHandleFunc);\n    event.target.addEventListener('mouseout', removingHandleFunc);\n  }\n\n  render() {\n    const { activeModeOpt: { tool } } = this.props;\n    return (\n      <div className=\"piskel-block\">\n        <div className={`square-container ${tool}-mode`}>\n          <canvas\n            className=\"piskel-canvas\"\n            ref={this.canvas}\n            onMouseDown={this.handleClick}\n            onContextMenu={e => e.preventDefault()}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPiskelBlock.propTypes = propTypes;\n","import PiskelBlock from './PiskelBlock';\r\nimport './PiskelBlock.scss';\r\n\r\nexport default PiskelBlock;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    handleSetActiveToolArial: PropTypes.func,\n  }).isRequired,\n\n  activeSize: PropTypes.number.isRequired,\n};\n\nexport default class PixelSize extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    const { handles: { handleSetActiveToolArial } } = this.props;\n    const { size } = e.target.dataset;\n\n    handleSetActiveToolArial(+size);\n  }\n\n  render() {\n    const { activeSize } = this.props;\n\n    const variants = [0, 1, 2, 3].map((i) => {\n      const isActive = activeSize === i + 1;\n      return (\n\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n        <li\n          onClick={this.handleClick}\n          className={`pixel-size-container__pixel-size-variant ${isActive ? 'active' : ''}`}\n          data-size={i + 1}\n          key={i}\n          role=\"option\"\n          tabIndex=\"0\"\n          aria-selected={isActive}\n        />\n      );\n    });\n    return (\n      <ul className=\"pixel-size-container\">\n        {variants}\n      </ul>\n    );\n  }\n}\n\nPixelSize.propTypes = propTypes;\n","import PixelSize from './PixelSize';\r\nimport './PixelSize.scss';\r\n\r\nexport default PixelSize;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Utils from '../../utils/utils';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    handleSetActiveTool: PropTypes.func,\n  }).isRequired,\n\n  activeTool: PropTypes.string.isRequired,\n  tools: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default class ToolsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOnTool = this.handleClickOnTool.bind(this);\n  }\n\n  handleClickOnTool(e) {\n    const { handles: { handleSetActiveTool } } = this.props;\n    const { toolType } = e.target.dataset;\n\n    handleSetActiveTool(toolType);\n  }\n\n  render() {\n    const { tools, activeTool } = this.props;\n\n    const toolsItems = tools.map((toolName, i) => {\n      const toolNameCamelCase = Utils.kebabCaseToCamelCase(toolName);\n      const isActive = activeTool === toolNameCamelCase;\n      return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n        <li\n          onClick={this.handleClickOnTool}\n          className={`lools-list__tool lools-list__tool-${toolName} ${isActive ? 'active' : ''}`}\n          data-tool-type={toolNameCamelCase}\n          // eslint-disable-next-line react/no-array-index-key\n          key={i}\n          role=\"option\"\n          tabIndex=\"0\"\n          aria-selected={isActive}\n        />\n      );\n    });\n    return (\n      <ul className=\"lools-list\">\n        { toolsItems }\n      </ul>\n    );\n  }\n}\n\nToolsList.propTypes = propTypes;\n","import ToolsList from './ToolsList';\r\nimport './ToolsList.scss';\r\n\r\nexport default ToolsList;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    handleSetActiveColors: PropTypes.func,\n  }).isRequired,\n\n  activeColors: PropTypes.shape({\n    primary: PropTypes.string,\n    secondary: PropTypes.string,\n  }).isRequired,\n};\n\nexport default class ColorControls extends Component {\n  constructor(props) {\n    super(props);\n\n    this.colorInputs = {};\n\n    this.handleChangeValue = this.handleChangeValue.bind(this);\n  }\n\n  handleChangeValue(e, colorInputName) {\n    const { handles: { handleSetActiveColors } } = this.props;\n\n    const newColor = {\n      [colorInputName]: e.target.value,\n    };\n\n    handleSetActiveColors(newColor);\n  }\n\n  render() {\n    const { activeColors } = this.props;\n\n    const colorControls = Object.keys(activeColors).map((name, i) => {\n      const isTransparentColor = activeColors[name] === 'transparent';\n\n      return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n        <div\n          className={`${name}-color color-icon ${isTransparentColor ? 'transparent' : ''}`}\n          // eslint-disable-next-line react/no-array-index-key\n          key={i}\n          onClick={() => this.colorInputs[name].click()}\n          style={{ backgroundColor: activeColors[name] }}\n          role=\"button\"\n          tabIndex=\"0\"\n        >\n          <input\n            onChange={e => this.handleChangeValue(e, name)}\n            type=\"color\"\n            value={activeColors[name]}\n            className=\"input-color hidden\"\n            ref={(input) => { this.colorInputs[name] = input; }}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"color-control-block\">\n        {colorControls}\n      </div>\n    );\n  }\n}\n\nColorControls.propTypes = propTypes;\n","import ColorControls from './ColorControls';\r\nimport './ColorControls.scss';\r\n\r\nexport default ColorControls;\r\n","import ToolsBlock from './ToolsBlock';\r\nimport './ToolsBlock.scss';\r\n\r\nexport default ToolsBlock;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PixelSize from '../PixelSize';\nimport ToolsList from '../ToolsList';\nimport ColorControls from '../ColorControls';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    toolsHandles: PropTypes.object,\n    colorControlHandles: PropTypes.object,\n    toolArialHandles: PropTypes.object,\n  }).isRequired,\n\n  activeModeOpt: PropTypes.shape({\n    tool: PropTypes.string,\n    toolArial: PropTypes.number,\n  }).isRequired,\n\n  activeColors: PropTypes.shape({\n    primary: PropTypes.string,\n    secondary: PropTypes.string,\n  }).isRequired,\n};\n\nexport default function ToolsBlock(props) {\n  const {\n    handles: {\n      toolsHandles,\n      toolArialHandles,\n      colorControlHandles,\n    },\n  } = props;\n  const { activeModeOpt: { tool, toolArial } } = props;\n  const { activeColors } = props;\n  const tools = [\n    'pen',\n    'bucket',\n    'eraser',\n    'color-picker',\n  ];\n\n  return (\n    <div className=\"tools-block\">\n      <PixelSize handles={toolArialHandles} activeSize={toolArial} />\n      <ToolsList handles={toolsHandles} activeTool={tool} tools={tools} />\n      <ColorControls handles={colorControlHandles} activeColors={activeColors} />\n    </div>\n  );\n}\n\nToolsBlock.propTypes = propTypes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport frameUtils from '../../utils/frameUtils';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    handleRemoveFrame: PropTypes.func,\n    handleDuplicateFrame: PropTypes.func,\n    handleSetActiveFrame: PropTypes.func,\n  }).isRequired,\n\n  frame: PropTypes.shape({\n    frameColors: PropTypes.array,\n    frameID: PropTypes.number,\n  }).isRequired,\n\n  isOnlyOneItem: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  orderNumber: PropTypes.number.isRequired,\n};\n\nexport default class PiskelFrame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = React.createRef();\n\n    this.handleClickOnFrame = this.handleClickOnFrame.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    const { frame } = this.props;\n\n    const size = canvas.getBoundingClientRect();\n    canvas.setAttribute('width', size.width);\n    canvas.setAttribute('height', size.height);\n\n    frameUtils.paintDefaultScreen(canvas, frame.frameColors.length);\n    frameUtils.paintColors(canvas, frame.frameColors);\n  }\n\n  componentDidUpdate() {\n    const { canvas: { current: canvas } } = this;\n    const { frame, isActive } = this.props;\n\n    if (isActive) {\n      frameUtils.paintDefaultScreen(canvas, frame.frameColors.length);\n      frameUtils.paintColors(canvas, frame.frameColors);\n    }\n  }\n\n  handleClickOnFrame(e) {\n    const {\n      handles: {\n        handleRemoveFrame,\n        handleDuplicateFrame,\n        handleSetActiveFrame,\n      },\n    } = this.props;\n    const { frame } = this.props;\n\n    const handleByTarget = {\n      delete: () => handleRemoveFrame(frame),\n      dublicate: () => handleDuplicateFrame(frame),\n      move: () => {},\n      noControls: () => handleSetActiveFrame(frame),\n    };\n\n    let targetType = 'noControls';\n\n    const controlType = e.target.className.match(/control-frame-(\\w+)/);\n    if (controlType !== null) {\n      targetType = controlType[1];\n    }\n\n    handleByTarget[targetType]();\n  }\n\n  render() {\n    const { isOnlyOneItem, orderNumber } = this.props;\n\n    const frameControls = ['delete', 'dublicate', 'move'].map((controlType, i) => (\n      <button type=\"button\" className={`control-frame-${controlType} control-frame`} key={i} /> // eslint-disable-line react/no-array-index-key\n    ));\n\n    return (\n      // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n      <div\n        className={`frame ${isOnlyOneItem ? 'only-one' : ''}`}\n        onClick={this.handleClickOnFrame}\n        data-order-number={orderNumber}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        {frameControls}\n        <canvas className=\"frame-canvas\" ref={this.canvas} />\n      </div>\n    );\n  }\n}\n\nPiskelFrame.propTypes = propTypes;\n","import PiskelFrame from './PiskelFrame';\nimport './PiskelFrame.scss';\n\nexport default PiskelFrame;\n","import PreviewFramesBlock from './PreviewFramesBlock';\r\nimport './PreviewFramesBlock.scss';\r\n\r\nexport default PreviewFramesBlock;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PiskelFrame from '../PiskelFrame';\n\nconst propTypes = {\n  handles: PropTypes.shape({\n    frameHandles: PropTypes.shape({\n      handleRemoveFrame: PropTypes.func,\n      handleDuplicateFrame: PropTypes.func,\n      handleSetActiveFrame: PropTypes.func,\n    }),\n    frameListHandles: PropTypes.shape({\n      handleAddNewFrame: PropTypes.func,\n    }),\n  }).isRequired,\n\n  frames: PropTypes.arrayOf(\n    PropTypes.shape({\n      frameColors: PropTypes.array,\n      frameID: PropTypes.number,\n    }),\n  ).isRequired,\n\n  activeFrameID: PropTypes.number.isRequired,\n};\n\nexport default function PreviewFramesBlock(props) {\n  const {\n    handles: { frameListHandles, frameHandles },\n    frames,\n    activeFrameID,\n  } = props;\n\n  const isOnlyOneItem = frames.length === 1;\n\n  const frameItems = frames.map((frame, i) => {\n    const isActive = frame.frameID === activeFrameID;\n\n    return (\n      <li\n        className={`preview-frames-list__frame-list-item ${isActive ? 'active' : ''}`}\n        key={frame.frameID}\n      >\n        <PiskelFrame\n          handles={frameHandles}\n          frame={frame}\n          isOnlyOneItem={isOnlyOneItem}\n          isActive={isActive}\n          orderNumber={i + 1}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"preview-frames-block\">\n      <ul className=\"preview-frames-list\">\n        { frameItems }\n      </ul>\n      <button type=\"button\" className=\"add-new-frame-button\" onClick={frameListHandles.handleAddNewFrame}>\n        <span className=\"add-new-frame-button__plus-icon\" />\n        <span className=\"add-new-frame-button__text\">Add new frame</span>\n      </button>\n    </div>\n\n  );\n}\n\nPreviewFramesBlock.propTypes = propTypes;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FrameUtils from '../../utils/frameUtils';\n\nconst propTypes = {\n  frames: PropTypes.arrayOf(\n    PropTypes.shape({\n      frameColors: PropTypes.array,\n      frameID: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default class PreviewAnimationBlock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fps: 0,\n    };\n\n    this.requestAnimationFrameID = null;\n    this.canvas = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n\n    const size = canvas.getBoundingClientRect();\n    canvas.setAttribute('width', size.width);\n    canvas.setAttribute('height', size.height);\n  }\n\n  componentDidUpdate() {\n    const { fps } = this.state;\n\n    cancelAnimationFrame(this.requestAnimationFrameID);\n    if (fps !== 0) {\n      this.animateFrames();\n    }\n  }\n\n  animateFrames() {\n    const { fps } = this.state;\n    const { frames } = this.props;\n    const { canvas: { current: canvas } } = this;\n\n    const startAnimating = () => {\n      const fpsInterval = 1000 / fps;\n      let frameCount = 0;\n      let interval = 0;\n      const self = this;\n\n      const step = (timestamp = 0) => {\n        const curInterval = timestamp - interval;\n\n        if (curInterval >= fpsInterval) {\n          interval = timestamp;\n          FrameUtils.paintDefaultScreen(canvas, frames[frameCount].frameColors.length);\n          FrameUtils.paintColors(canvas, frames[frameCount].frameColors);\n\n          frameCount += 1;\n          if (frameCount === frames.length) frameCount = 0;\n        }\n        self.requestAnimationFrameID = requestAnimationFrame(step);\n      };\n\n      step();\n    };\n\n    startAnimating();\n  }\n\n  handleChange(e) {\n    this.setState({ fps: +e.target.value });\n  }\n\n  render() {\n    const { fps } = this.state;\n\n    return (\n      <div className=\"preview-block\">\n        <div className=\"animated-canvas-block\">\n          <canvas className=\"animation-preview-canvas\" ref={this.canvas} />\n        </div>\n        <div className=\"fps-control-block\">\n          <span className=\"fps-control-text\">\n            <span className=\"fps-value\">{ fps }</span>\n            <span className=\"fps-text\"> FPS</span>\n          </span>\n          <input\n            className=\"range-fps\"\n            type=\"range\"\n            value={fps}\n            min=\"0\"\n            max=\"24\"\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nPreviewAnimationBlock.propTypes = propTypes;\n","import PreviewAnimationBlock from './PreviewAnimationBlock';\r\nimport './PreviewAnimationBlock.scss';\r\n\r\nexport default PreviewAnimationBlock;\r\n","import React, { Component } from 'react';\n\nimport Utils from '../../utils/utils';\nimport FrameUtils from '../../utils/frameUtils';\n\nimport Header from '../Header';\nimport PiskelBlock from '../PiskelBlock';\nimport ToolsBlock from '../ToolsBlock';\nimport PreviewFramesBlock from '../PreviewFramesBlock';\nimport PreviewAnimationBlock from '../PreviewAnimationBlock';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    const frameID = Utils.getRandomID();\n    const pixelCount = 16;\n\n    this.state = {\n      pixelCount,\n      frames: [\n        {\n          frameColors: FrameUtils.makeNewMatrix(pixelCount),\n          frameID,\n        },\n      ],\n      activeFrameID: frameID,\n      activeModeOpt: {\n        tool: 'pen',\n        toolArial: 1,\n      },\n      activeColors: {\n        primary: '#00ff00',\n        secondary: 'transparent',\n      },\n    };\n\n    [\n      'handleFrameMatrixChange',\n      'handleAddNewFrame',\n      'handleRemoveFrame',\n      'handleDuplicateFrame',\n      'handleSetActiveFrame',\n      'handleSetActiveTool',\n      'handleSetActiveToolArial',\n      'handleSetActiveColors',\n    ].forEach((handle) => {\n      this[handle] = this[handle].bind(this);\n    });\n  }\n\n  handleFrameMatrixChange(matrixChanges) {\n    const { frames, activeFrameID, pixelCount } = this.state;\n    const activeFrameIndex = frames.findIndex(frame => frame.frameID === activeFrameID);\n\n    const newFramesMatrixs = frames.slice();\n\n    if (Array.isArray(matrixChanges)) {\n      matrixChanges.forEach((pixel) => {\n        const { pos, color } = pixel;\n        newFramesMatrixs[activeFrameIndex].frameColors[pos.y][pos.x] = color;\n      });\n    } else if (typeof matrixChanges === 'object') {\n      const { specialActionType, specialActionOpt } = matrixChanges;\n\n      const specialActions = {\n        fill: (opt) => {\n          const filledMatrix = FrameUtils.makeNewMatrix(pixelCount, opt.color);\n          newFramesMatrixs[activeFrameIndex].frameColors = filledMatrix;\n        },\n      };\n\n      specialActions[specialActionType](specialActionOpt);\n    }\n\n    this.setState({ frames: newFramesMatrixs });\n  }\n\n  handleAddNewFrame() {\n    const { pixelCount } = this.state;\n\n    this.setState((state) => {\n      const newFrame = {\n        frameColors: FrameUtils.makeNewMatrix(pixelCount),\n        frameID: Utils.getRandomID(),\n      };\n      const newFrames = state.frames.slice();\n      newFrames.push(newFrame);\n      return {\n        frames: newFrames,\n        activeFrameID: newFrame.frameID,\n      };\n    });\n  }\n\n  handleDuplicateFrame(copingFrame) {\n    this.setState((state) => {\n      // eslint-disable-next-line max-len\n      const copingFrameIndex = state.frames.findIndex(frame => frame.frameID === copingFrame.frameID);\n\n      const colorsCopy = [];\n      copingFrame.frameColors.forEach(rowColors => colorsCopy.push(rowColors.slice()));\n\n      const copyFrame = {\n        frameColors: colorsCopy,\n        frameID: Utils.getRandomID(),\n      };\n\n      state.frames.splice(copingFrameIndex + 1, 0, copyFrame);\n      return {\n        frames: state.frames,\n        activeFrameID: copyFrame.frameID,\n      };\n    });\n  }\n\n  handleRemoveFrame(removingFrame) {\n    const { frames, activeFrameID } = this.state;\n\n    const removingFrameIndex = frames.findIndex(frame => frame.frameID === removingFrame.frameID);\n    frames.splice(removingFrameIndex, 1);\n\n    const stateChanges = { frames };\n\n    if (removingFrame.frameID === activeFrameID) {\n      const nextActiveFrameIndex = removingFrameIndex === 0 ? 0 : removingFrameIndex - 1;\n      stateChanges.activeFrameID = frames[nextActiveFrameIndex].frameID;\n    }\n\n    this.setState(stateChanges);\n  }\n\n  handleSetActiveFrame(newActiveFrame) {\n    this.setState({ activeFrameID: newActiveFrame.frameID });\n  }\n\n  handleSetActiveTool(tool) {\n    this.setState((state) => {\n      const newModeOpt = Object.assign({}, state.activeModeOpt, { tool });\n      return { activeModeOpt: newModeOpt };\n    });\n  }\n\n  handleSetActiveToolArial(toolArial) {\n    this.setState((state) => {\n      const newModeOpt = Object.assign({}, state.activeModeOpt, { toolArial });\n      return { activeModeOpt: newModeOpt };\n    });\n  }\n\n  handleSetActiveColors(newColor) {\n    this.setState((state) => {\n      const newColors = Object.assign({}, state.activeColors, newColor);\n      return { activeColors: newColors };\n    });\n  }\n\n  render() {\n    const previewFramesBlockHandles = {\n      frameHandles: {\n        handleRemoveFrame: this.handleRemoveFrame,\n        handleDuplicateFrame: this.handleDuplicateFrame,\n        handleSetActiveFrame: this.handleSetActiveFrame,\n      },\n      frameListHandles: {\n        handleAddNewFrame: this.handleAddNewFrame,\n      },\n    };\n\n    const toolsBlockHandles = {\n      toolsHandles: {\n        handleSetActiveTool: this.handleSetActiveTool,\n      },\n      colorControlHandles: {\n        handleSetActiveColors: this.handleSetActiveColors,\n      },\n      toolArialHandles: {\n        handleSetActiveToolArial: this.handleSetActiveToolArial,\n      },\n    };\n\n    const piskelBlockHandles = {\n      handleSetActiveColors: this.handleSetActiveColors,\n      handleFrameMatrixChange: this.handleFrameMatrixChange,\n    };\n\n\n    const {\n      activeModeOpt,\n      activeColors,\n      frames,\n      activeFrameID,\n    } = this.state;\n    const activeFrame = frames.find(frame => frame.frameID === activeFrameID);\n\n    return (\n      <div className=\"app-wrapper\">\n        <Header />\n        <main className=\"main\">\n          <ToolsBlock\n            handles={toolsBlockHandles}\n            activeModeOpt={activeModeOpt}\n            activeColors={activeColors}\n          />\n\n          <PreviewFramesBlock\n            handles={previewFramesBlockHandles}\n            frames={frames}\n            activeFrameID={activeFrameID}\n          />\n\n          <PiskelBlock\n            handles={piskelBlockHandles}\n            activeFrame={activeFrame}\n            activeModeOpt={activeModeOpt}\n            activeColors={activeColors}\n          />\n\n          <PreviewAnimationBlock\n            frames={frames}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n","import App from './App';\r\n\r\nimport '../../css/common.css';\r\nimport '../../css/normalize.css';\r\nimport './App.scss';\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}